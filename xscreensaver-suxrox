#!/bin/bash
# xscreensaver-suxrox
#
#
# This program is free software. It comes without any warranty, to the extent
# permitted by applicable law. You can redistribute it and/or modify it under
# the terms of the Do What The Fuck You Want To Public License, Version 2, as
# published by Sam Hocevar. See WTFPL.txt or http://www.wtfpl.net/ for more
# details.
#
#
# This progra shows all your xscreensaver hacks, one at a time, and asks for
# judgement (sux or rox) , then enables or disables the hack.  It should skip
# any previously judged hacks.

HACK_DIRS=(
  /usr/lib/xscreensaver
  /usr/libexec/xscreensaver
)
XSS_CONF_FILE=$HOME/.xscreensaver
SUXROXED=$HOME/.xscreensaver-suxroxed
TAB=$(echo -e "\t")
shopt -s nullglob


function main() {
  for hack_dir in "${HACK_DIRS[@]}"; do
    for hack in $hack_dir/*; do 
      hack_name=$(echo $hack | sed 's/.*\///')

      # Check that the hack has not been judged.
      if 
        grep -q "^${hack_name}$" $SUXROXED
      then
        continue
      fi

      # Ensure the hack is named in configuration.
      if ! listed; then
        if official || compliant; then
          echo "Adding ${hack_name} to the list."
          list
        else
          echo "The hack named ${hack_name} does not seem valid; skipping."
          continue
        fi
      fi

      # Launch the hack, then judge.
      while true; do
        echo "Inhibiting screensaver (just once)."
        xdg-screensaver reset
        echo "Showing '${hack_name}'."
        $hack 2>/dev/null &
        hack_pid="${!}"
        read -p "Hit enter when done viewing."
        kill "${hack_pid}"
        wait "${hack_pid}"
        read -p "Judgement ( [s]ux, [r]ox, [A]gain ):  " -n 1 response
        echo
        case $response in
          'r')
              judge_hack $hack_name rox
              break
              ;;
          's')
              judge_hack $hack_name sux
              break
              ;;
        esac
      done
    done
  done

  echo "You have judged all your hacks.  To start over, remove ${SUXROXED} ."
}


function judge_hack() {
  hack_name=${1}
  judgement=${2}

  prefix=' '
  if test $judgement = 'sux'; then
    prefix='-'
  fi

  sed -i -E "s/^.(.*\s${hack_name}\s)/${prefix}\\1/" $XSS_CONF_FILE

  echo $hack_name >> $SUXROXED
}


function list() {
  prefix='- '
  if ldd "${hack}" | grep -q 'GL'; then
    prefix+="GL: "
  fi
  new_line="$(printf '%-32s%-48s%s\n' "${prefix}" "${hack_name} -root" '\n\')"
  lines=()
  programs='no'
  while IFS='' read -r line; do
    if test 'yes' == "${programs}"; then
      if ! grep -q '\\n\\$' <<< "${line}"; then
        programs='over'
        lines+=( "${new_line}" )
      fi
    fi
    if test 'no' == "${programs}" && grep -q '^programs:' <<< "${line}"; then
      programs='yes'
    fi
    lines+=( "${line}" )
  done < $XSS_CONF_FILE

  echo "DEBUG:  ${#lines[@]} lines ready to write."

  for line in "${lines[@]}"; do
    printf '%s\n' "${line}"
  done > $XSS_CONF_FILE
}


function listed() {
  grep -Eq "\s${hack_name}\s" $XSS_CONF_FILE
}


function official() {
  $hack --help 2>&1 | grep -q 'XScreenSaver .* distribution'
}


function compliant() {
  $hack --help 2>&1 | grep -q -- '--root'
}


main "${@}"
