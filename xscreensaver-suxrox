#!/bin/bash
# xscreensaver-suxrox
#
#
# This program is free software. It comes without any warranty, to the extent
# permitted by applicable law. You can redistribute it and/or modify it under
# the terms of the Do What The Fuck You Want To Public License, Version 2, as
# published by Sam Hocevar. See WTFPL.txt or http://www.wtfpl.net/ for more
# details.
#
#
# This progra shows all your xscreensaver hacks, one at a time, and asks for
# judgement (sux or rox) , then enables or disables the hack.  It should skip
# any previously judged hacks.

HACK_DIR=/usr/lib/xscreensaver
XSS_CONF_FILE=$HOME/.xscreensaver
SUXROXED=$HOME/.xscreensaver-suxroxed
TAB=$(echo -e "\t")

judge_hack () {
  hack_name=${1}
  judgement=${2}

  prefix=' '
  if test $judgement = 'sux'; then
    prefix='-'
  fi

  # Check for configuration line.
  if ! grep -Eq "^..*${TAB}${hack_name} " $XSS_CONF_FILE; then
    # xscreensaver-demo will update the configuration with all available hacks.
    timeout 1 xscreensaver-demo
    # Don't fail when the line doesn't show up.  There is at least one file,
    # /usr/lib/xscreensaver/ljlatest, controlled by the package manager, that
    # xscreensaver-demo never lists in the config.
    #
#    if ! grep -Eq "^..*${TAB}${hack_name} " $XSS_CONF_FILE; then
#      echo "Cannot update .xscreensaver using xscreensaver-demo."
#      exit 1
#    fi
  fi

  # Enable or disable hack.
  sed -i -E "s/^.(.*${TAB}${hack_name} )/${prefix}\\1/" $XSS_CONF_FILE

  # Record that this hack has been judged.
  echo $hack_name >> $SUXROXED
}

compliant () {
  # This might indicate that the thing will quit when you 'q'.
  hack=$1
  $hack --help 2>&1 | grep -q 'XScreenSaver .* distribution'
}

for hack in $HACK_DIR/*; do 
  hack_name=$(echo $hack | sed 's/.*\///')

  # Check that the hack has not been judged.
  if 
    grep -q "^${hack_name}$" $SUXROXED
  then
    continue
  fi

  # Check that the hack looks likely to behave.
  if ! compliant $hack; then
    echo "${hack}"
    read -p "The hack named \"${hack}\" seems weird.  'q' may not quit.  Action ( [S]ux, [i]gnore, [t]ry ):  " -n 1 response
    case $response in
      'i')
        continue
        ;;
      't')
        true
        ;;
      *)
        judge_hack $hack_name sux
        continue
        ;;
    esac
  fi

  # Launch the hack, then judge.
  while true; do
    echo "Showing '${hack_name}'."
    $hack 2>/dev/null
    read -p "Judgement ( [s]ux, [r]ox, [A]gain ):  " -n 1 response
    echo
    case $response in
      'r')
          judge_hack $hack_name rox
          break
          ;;
      's')
          judge_hack $hack_name sux
          break
          ;;
    esac
  done
done

echo "You have judged all your hacks.  To start over, remove ${SUXROXED} ."
